import org.gradle.internal.os.OperatingSystem

plugins {
    id 'bb.java-application-conventions'
}

def swtGroup = 'org.eclipse.platform'

def swtArtifact = 'org.eclipse.swt.'
switch ( OperatingSystem.current() ) {
    case OperatingSystem.WINDOWS:
        swtArtifact = 'win32.win32.x86_64'
        break
    case OperatingSystem.MAC_OS:
        swtArtifact += 'cocoa.macosx.x86_64'
        break
    default:
        swtArtifact += 'gtk.linux.x86_64'
}
// 3.117.0 - 2021-09-15 v4.946 Build-Jdk-Spec: 11 (class file version 55.0)
// 3.120.0 - 2022-06-14 v4.952 Build-Jdk-Spec: 11 (class file version 55.0)
// '3.122.0'  // 2022-12-06 v4.956 Build-Jdk-Spec: 17 (class file version 55.0)
def swtVersion =  '3.116.100'  // 2021-06-14 v4.944 Build-Jdk-Spec: 11 (class file version 52.0)
// the 1st version of org.eclipse.swt.cocoa.macosx.aarch64
def swtGAV = "${swtGroup}:${swtArtifact}:${swtVersion}"

dependencies {
    implementation project(':core')
    implementation project(':serviceA')
    implementation project(':serviceB')
    implementation project(':serviceF')

 /* SWT transitive dependency has nothing of interest for us */
 // |
 // +--- org.eclipse.platform:org.eclipse.swt.gtk.linux.x86_64:3.122.0
 //      \--- org.eclipse.platform:org.eclipse.swt:3.122.0
 //           \--- org.eclipse.platform:org.eclipse.swt.${osgi.platform}:3.122.0 ->
 //      org.eclipse.platform:org.eclipse.swt.gtk.linux.x86_64:3.122.0 (*)
    implementation(swtGAV) { transitive = false }
}

application {
    mainClass = 'bb.app.Main'
}
